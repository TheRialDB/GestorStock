@page "/stock"
@using GestorStock.BD.Data;
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]
@using Modals

<PageTitle>Stock</PageTitle>

<h2 class="text-center">Stock</h2>
<!DOCTYPE HTML>

<html>

<head>

    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <link href="/css/Styles/StockStyles.css?version=0.1" rel="stylesheet" type="text/css" />

</head>

<body class="align-content-center">
  <div class="insquare"> 
    <div class="table-responsive rounded-3">
            <table class="table table-striped table-hover table-bordered">
            <thead id="table-headers">
                <tr>
                    <th>Codigo</th>
                    <th>Nombre</th>
                    <th>Descripcion</th>
                    <th>Cantidad</th>
                    <th>Unidad</th>
                    <th>Estado</th>
                    <th>Deposito</th>
                    <th>Direccion</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>1</td>
                    <td>Tornillo</td>
                    <td>jhgjghk</td>
                    <td>6</td>
                    <td>kg</td>
                    <td>disponible</td>
                    <td>depo 2</td>
                    <td>Jorge newbery 896</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Tornillo</td>
                    <td>jhgjghk</td>
                    <td>6</td>
                    <td>kg</td>
                    <td>disponible</td>
                    <td>depo 2</td>
                    <td>Jorge newbery 896</td>
                </tr>
                <tr>
                    <td>1</td>
                    <td>Tornillo</td>
                    <td>jhgjghk</td>
                    <td>6</td>
                    <td>kg</td>
                    <td>disponible</td>
                    <td>depo 2</td>
                    <td>Jorge newbery 896</td>
                </tr>
                    <tr>
                        <td>1</td>
                        <td>Tornillo</td>
                        <td>jhgjghk</td>
                        <td>6</td>
                        <td>kg</td>
                        <td>disponible</td>
                        <td>depo 2</td>
                        <td>Jorge newbery 896</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Tornillo</td>
                        <td>jhgjghk</td>
                        <td>6</td>
                        <td>kg</td>
                        <td>disponible</td>
                        <td>depo 2</td>
                        <td>Jorge newbery 896</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Tornillo</td>
                        <td>jhgjghk</td>
                        <td>6</td>
                        <td>kg</td>
                        <td>disponible</td>
                        <td>depo 2</td>
                        <td>Jorge newbery 896</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Tornillo</td>
                        <td>jhgjghk</td>
                        <td>6</td>
                        <td>kg</td>
                        <td>disponible</td>
                        <td>depo 2</td>
                        <td>Jorge newbery 896</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Tornillo</td>
                        <td>jhgjghk</td>
                        <td>6</td>
                        <td>kg</td>
                        <td>disponible</td>
                        <td>depo 2</td>
                        <td>Jorge newbery 896</td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td>Tornillo</td>
                        <td>jhgjghk</td>
                        <td>6</td>
                        <td>kg</td>
                        <td>disponible</td>
                        <td>depo 2</td>
                        <td>Jorge newbery 896</td>
                    </tr>
            </tbody>
        </table>

        </div>

        <div class="d-flex">

            <button type="button" class="btn btn-info botones"
            @onclick="() => OpenCargarDialog()">
                Cargar
            </button>
            <button type="button" class="btn btn-info botones"
            @onclick="() => OpenEliminarDialog()">
                Eliminar
            </button>
            <button type="button" class="btn btn-info botones"
            @onclick="() => OpenModificarDialog()">
                Modificar
            </button>

        </div>

        @if (CargarDialogOpen)
        {
            <GestorStock.Client.Pages.Modals.ModalCargar Title="Cargar"
                                                         Text=""
                                                         OnClose="@OnCargarDialogClose">
            </GestorStock.Client.Pages.Modals.ModalCargar>
        }

        @if (EliminarDialogOpen)
        {
            <GestorStock.Client.Pages.Modals.ModalTextOnly Title="Eliminar"
                                                           Text=""
                                                           OnClose="@OnEliminarDialogClose">
            </GestorStock.Client.Pages.Modals.ModalTextOnly>
        }

        @if (ModificarDialogOpen)
        {
            <GestorStock.Client.Pages.Modals.ModalTextOnly Title="Modificar"
                                                           Text=""
                                                           OnClose="@OnModificarDialogClose">
            </GestorStock.Client.Pages.Modals.ModalTextOnly>
        }


    </div>

    <h2 class="text-center header">Todos los depositos</h2>

    <div class="insquare">
        <div class="table-responsive rounded-3">
            <table class="table table-striped table-hover table-bordered">
                <thead id="table-headers">
                    <tr>
                        <th>Codigo</th>
                        <th>Nombre</th>
                        <th>Descripcion</th>
                        <th>Cantidad</th>
                        <th>Unidad</th>
                        <th>Estado</th>
                        <th>Deposito</th>
                        <th>Direccion</th>
                    </tr>

                    @if (Productos == null)
                        {
                        <tr>Cargando...</tr>
                        }
                    else if (Productos.Count == 0)
                        {
                        <tr>No existe el producto cargado</tr>
                        }
                    else
                        {
                        @foreach (var item in Productos)
                            {
                            <tr>@item.codigo</tr>
                            <tr>@item.nombreProducto</tr>
                            <tr>@item.cantidad</tr>
                            <tr>@item.estado</tr>
                            //<tr>@item.nombreDeposito</tr>
                            }
                        }

                </thead>
                <tbody>

                </tbody>
            </table>
        </div>
    </div>
</body>
</html>

@code {

    private List<Producto> Productos;

    ////protected override async Task OnInitializedAsync()
    //    {
    //    Productos = await dbContext.Productos
    //        .Include(p => p.Depositos) 
    //        .ToListAsync();
    //    }

    

    public bool CargarDialogOpen { get; set; }

    public bool EliminarDialogOpen { get; set; }

    public bool ModificarDialogOpen { get; set; }

    private void OpenCargarDialog()
    {
        CargarDialogOpen = true;
        StateHasChanged();
    }

    private async Task OnCargarDialogClose(bool accepted)
    {
        CargarDialogOpen = false;
        StateHasChanged();
    }

    private void OpenEliminarDialog()
    {
        EliminarDialogOpen = true;
        StateHasChanged();
    }

    private async Task OnEliminarDialogClose(bool accepted)
    {
        EliminarDialogOpen = false;
        StateHasChanged();
    }

    private void OpenModificarDialog()
    {
        ModificarDialogOpen = true;
        StateHasChanged();
    }

    private async Task OnModificarDialogClose(bool accepted)
    {
        ModificarDialogOpen = false;
        StateHasChanged();
    }

}
