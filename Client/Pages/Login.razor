@page "/"
@inject NavigationManager navManager

@layout LoginLayout
@inject HttpClient httpClient
@using GestorStock.Client.Extensiones
@using GestorStock.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider autenticacionProvider

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Gestion de stock</title>
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <link href="/css/Styles/styles.css" rel="stylesheet" type="text/css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400&display=swap" rel="stylesheet">
</head>
<body class="body">
    <div class="page-content-wrapper">
        <div class="content-login">
            <div class="container1">
                <h1 class="heading">Iniciar Sesion</h1>
                <div>
                    <form data-name="Log-In-form" class="form">
                        <input type="text" @bind=login.Correo class="nombre-usuario-txt" placeholder="Correo" required="" />
                        <input type="password" @bind=login.Clave class="contrasena-txt" placeholder="Contraseña" required="" />
                        <button @onclick="IniciarSesion" class="ingresar-btn" >iniciar</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="bg-grad">
        <div class="big-circle-left"></div>
        <div class="big-circle-right"></div>
        <div class="gradiente"></div>
    </div>

</body>

</html>


@code {
    private LoginDTO login = new LoginDTO();

    private async Task IniciarSesion()
    {
        var auth = (AutenticacionExtension)autenticacionProvider;
        await auth.ActualizarEstadoAutenticacion(
            new SesionDTO
            {
                Nombre= "JUAN",
                Correo=login.Correo,
                Rol= "Administrador"

            }
        );

        navManager.NavigateTo("/Index", true);
        //var loginResponse = await httpClient.PostAsJsonAsync<LoginDTO>("/api/Usuario/Login", login);
        //if (loginResponse.IsSuccessStatusCode)
        //{
        //    var sesionUsuario = await loginResponse.Content.ReadFromJsonAsync<SesionDTO>();
        //    var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
        //    await autenticacionExt.ActualizarEstadoAutenticacion(sesionUsuario);

        //    navManager.NavigateTo("/Index");
        //}
    }
}
