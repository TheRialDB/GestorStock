@page "/Solicitudes/NuevaSolicitud"
@inject IHttpServicio http

<PageTitle>Nueva Solicitud</PageTitle>


<div class="insquare-header">

    <h2 class="newSolicitud">Nueva Solicitud</h2>

</div>


<head>

    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <link href="/css/Styles/NuevaSoli.css" rel="stylesheet" type="text/css" />

</head>


    <div class="container">

        <div class="row">
            <div class="col-md-4">

                <div class="insquare">
                   <div class="center flex-fill">

                    <EditForm Model="notaPedido" OnValidSubmit="Agregar">
                        <DataAnnotationsValidator />

                        <div class="padd">

                            <div class="form-group margin-b">
                                <label>Fecha</label>
                                <div>
                                    <InputDate class="form-control" @bind-Value="@notaPedido.fechaPedido" />
                                    <ValidationMessage For="@(() => notaPedido.fechaPedido)" />
                                </div>
                            </div>

                            <div class="form-group margin-b">

                                <label>Emisor</label>

                                @if (depositos != null)
                                {
                                    <div>
                                        <InputSelect class="form-control" @bind-Value="@notaPedido.codDepEmisor">
                                            <option value="0"> Seleccione un emisor </option>
                                            @foreach (var deposito in depositos)
                                            {
                                                <option value="@deposito.id">@deposito.nombreDeposito</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage For="@(() => notaPedido.codDepEmisor)" />

                                    </div>
                                }
                            </div>

                            <div class="form-group margin-b">

                                <label>Receptor</label>

                                @if (depositos != null)
                                {
                                    <InputSelect class="form-control" @bind-Value="@notaPedido.codDepReceptor">
                                        <option value="0"> Seleccione un receptor </option>
                                        @foreach (var deposito in depositos)
                                        {
                                            <option value="@deposito.id">@deposito.nombreDeposito</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => notaPedido.codDepReceptor)" />
                                }
                            </div>


                            <div class="form-group">
                                <label class="mb-2 fw-bold color-primario">Cargar Stock</label>
                                <div class="mb-2">

                                    <div class="form-group">
                                        <div class="input-group-append">
                                            <InputSelect class="form-control mt-2" @bind-Value="@productosStock">
                                                <option value="0"> Selecciona un producto </option>
                                                @foreach (var stock in stockk)
                                                {
                                                    <option value="@stock.id">@stock.Productos.nombreProducto</option>
                                                }
                                            </InputSelect>
                                            <InputNumber class="form-control mt-2" @bind-Value="@productosCant"/>
                                            <a class="btn btn-success mt-2" @onclick="@AgregarProductos">Agregar Otro Producto</a>
                                        </div>
                                    </div>

                                </div>
                            </div>


                            <div class="form-group margin-b">
                                <label>Estado</label>
                                <div>
                                    <InputSelect class="form-control" @bind-Value="@notaPedido.EstadoId">
                                        <option Value="1"> Pendiente </option>
                                    </InputSelect>
                                    <ValidationMessage For="@(() => notaPedido.EstadoId)" />
                                </div>
                            </div>

                            <div class="modal-footer footer justify-content-evenly">
                                <button class="btn btn-info" type="submit">Cargar Solicitud</button>
                                @* <button class="btn btn-secondary" @onclick="onCancel">Cancelar</button> *@
                            </div>

                        </div>
                    </EditForm>

                    </div>
                </div>

            </div>


            <div class="col-md-4">

                <div class="insquare">

                    <div class="table-responsive rounded-3">
                        <table class="table table-striped table-hover table-bordered text-center">
                            <thead id="table-headers">
                                <tr>
                                    <th>Productos</th>
                                    <th>Cantidad</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>

                                @if (error)
                                {
                                    <tr>
                                        <td colspan="6">@mensaje</td>
                                    </tr>
                                }
                                else
                                {

                                    @if (stocks == null)
                                    {
                                        <tr>Cargando...</tr>
                                    }
                                    else if (stocks.Count == 0)
                                    {
                                        <tr>No existen los datos</tr>
                                    }
                                    else
                                    {
                                        @foreach (var product in datosSolicitudDTO)
                                        {
                                            <tr>
                                                <td>@product.Stock</td>
                                                <td>@product.Quantity</td>
                                                <td>
                                                    <button class="btn btn-danger" @onclick="@(() => EliminarProductos(product))">Remove</button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }

                            </tbody>
                        </table>
                    </div>


                </div>

            </div>


            <div class="col-md-4">

                <div class="insquare">




                </div>

            </div>
        </div>

    </div>





@code {
    private List<string> stocks { get; set; } = new List<string>();
    private List<int> cantidades { get; set; } = new List<int>();
    public List<Deposito>? depositos { get; set; } = new();
    private NotaPedido notaPedido = new() { fechaPedido = DateTime.Today };
    public List<Stock>? stockk { get; set; } = new();

    private List<DatosSolicitudDTO> datosSolicitudDTO { get; set; } = new List<DatosSolicitudDTO>();


    private bool error = false;
    private string mensaje = "";
    private string productosStock;
    private int productosCant;

    private async Task Agregar()
    {
        NotaPedidoDTO notaPedidoDTO = new()
           {
               fechaPedido = notaPedido.fechaPedido,
               codDepEmisor = notaPedido.codDepEmisor,
               codDepReceptor = notaPedido.codDepReceptor,
               EstadoId = notaPedido.EstadoId
           };

        var httpRespuesta = await http.Post<NotaPedidoDTO>("api/NotaPedido", notaPedidoDTO); //post

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
        await LeerStock();
    }

    private async Task Leer()
    {
        depositos = null;

        var respuesta = await http.Get<List<Deposito>>("api/Deposito");

        error = respuesta.Error;

        if (!respuesta.Error)
        {
            depositos = respuesta.Respuesta;
        }
        else
        {
            mensaje = await respuesta.ObtenerError();
        }
    }

    private void AgregarProductos()
    {
        // Check if a product has been selected
        if (!string.IsNullOrEmpty(productosStock) && productosCant > 0)
        {
            // Create a new ProductViewModel and add it to the list
            datosSolicitudDTO.Add(new DatosSolicitudDTO
            {
                    Stock = productosStock,
                    Cantidad = productosCant
            });
        }   


            // Clear the input fields
            productosStock = string.Empty;
            productosCant = 0;
    }
        

    private async Task LeerStock()
    {
        stockk = null;

        string mensaje;

        bool error = false;

        var respuesta = await http.Get<List<Stock>>("api/Stock");

        error = respuesta.Error;

        if (!respuesta.Error)
        {
            stockk = respuesta.Respuesta;
        }
        else
        {
            mensaje = await respuesta.ObtenerError();
        }
    }


    private void EliminarProductos(string removeStock, int removeCant)
    {
        // Remove the selected product from the list
        productosStock.Remove(product);
        productosStock.Remove(product);
    }
}
