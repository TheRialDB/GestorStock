// <auto-generated />
using System;
using GestorStock.BD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorStock.BD.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230702162133_Unidad")]
    partial class Unidad
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Componente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("cantidad")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<int>("idComponentes")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Componentes");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Deposito", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("DireccionDeposito")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NombreDeposito")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.DetallePedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("productoID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productoID");

                    b.ToTable("DetallePedidos");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Direccion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("nombreDireccion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ID");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Envio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("destino")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("idEstado")
                        .HasColumnType("int");

                    b.Property<string>("origen")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nombreEstado")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.NotaPedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("detallePedidoid")
                        .HasColumnType("int");

                    b.Property<string>("emisor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("fechaPedido")
                        .HasMaxLength(40)
                        .HasColumnType("datetime2");

                    b.Property<int>("idDetallePedido")
                        .HasColumnType("int");

                    b.Property<string>("receptor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id");

                    b.HasIndex("detallePedidoid");

                    b.ToTable("notaPedidos");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepositoID")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreObra")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("idDeposito")
                        .HasColumnType("int");

                    b.Property<int>("idEstado")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepositoID");

                    b.HasIndex("EstadoId");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Producto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IdComponente")
                        .HasColumnType("int");

                    b.Property<string>("cantidad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("componenteID")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("idUnidad")
                        .HasColumnType("int");

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("unidadId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("componenteID");

                    b.HasIndex("unidadId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Remito", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("NotaPedidoid")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("estadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaEgreso")
                        .HasMaxLength(40)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaIngreso")
                        .HasMaxLength(40)
                        .HasColumnType("datetime2");

                    b.Property<int>("idEstado")
                        .HasColumnType("int");

                    b.Property<int>("idNotaPedido")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NotaPedidoid");

                    b.HasIndex("estadoId");

                    b.ToTable("Remitos");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nombreUnidad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Rolid")
                        .HasColumnType("int");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("idRol")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id");

                    b.HasIndex("Rolid");

                    b.HasIndex(new[] { "correo" }, "Usuario_correo_UQ")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.DetallePedido", b =>
                {
                    b.HasOne("GestorStock.BD.Data.Entity.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Envio", b =>
                {
                    b.HasOne("GestorStock.BD.Data.Entity.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.NotaPedido", b =>
                {
                    b.HasOne("GestorStock.BD.Data.Entity.DetallePedido", "detallePedido")
                        .WithMany()
                        .HasForeignKey("detallePedidoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("detallePedido");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Obra", b =>
                {
                    b.HasOne("GestorStock.BD.Data.Entity.Deposito", "Deposito")
                        .WithMany()
                        .HasForeignKey("DepositoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorStock.BD.Data.Entity.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposito");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Producto", b =>
                {
                    b.HasOne("GestorStock.BD.Data.Entity.Componente", "componente")
                        .WithMany()
                        .HasForeignKey("componenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorStock.BD.Data.Entity.Unidad", "unidad")
                        .WithMany()
                        .HasForeignKey("unidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("componente");

                    b.Navigation("unidad");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Remito", b =>
                {
                    b.HasOne("GestorStock.BD.Data.Entity.NotaPedido", "NotaPedido")
                        .WithMany()
                        .HasForeignKey("NotaPedidoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorStock.BD.Data.Entity.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotaPedido");

                    b.Navigation("estado");
                });

            modelBuilder.Entity("GestorStock.BD.Data.Entity.Usuario", b =>
                {
                    b.HasOne("GestorStock.BD.Data.Entity.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("Rolid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
